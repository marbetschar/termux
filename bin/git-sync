#!/data/data/com.termux/files/usr/bin/bash

git_sync_exec_dir() {
    GIT_ROOT=$1
    GIT_ROOT="${GIT_ROOT/#\~/$HOME}" # expand tilde in path

    if [ ! -d $GIT_ROOT ] || [ ! -d $GIT_ROOT/.git ]; then
        echo "Git Sync: $GIT_ROOT - Not a valid directory. Skipping..."

    else
        echo "Git Sync: $GIT_ROOT - Starting..."
        cd $GIT_ROOT
        git config --global pack.windowMemory "100m"
        git config --global pack.packSizeLimit "100m"
        git config --global pack.threads "1"
        git pull --rebase
        git add --all
        git commit -m "Auto commit: $(date '+%Y-%m-%d %H:%M:%S')"
        git pull --rebase
        git push
        echo "Git Sync: $GIT_ROOT - Complete."
    fi
}

git_sync_exec() {
    if [ -f ~/.termux/conf.d/git-sync.conf ]; then
        while IFS= read GIT_ROOT; do
            if [ -n "$GIT_ROOT" ]; then # string length is _not_ zero
                git_sync_exec_dir $GIT_ROOT
            fi
        done < ~/.termux/conf.d/git-sync.conf
    fi

    git_sync_exec_dir ~/.termux
    touch ~/.termux/conf.d/git-sync.conf
}

git_sync_add() {
    GIT_ROOT=$1
    GIT_ROOT="${GIT_ROOT/#\~/$HOME}" # expand tilde in path

    (cat ~/.termux/conf.d/git-sync.conf | grep "$GIT_ROOT") || echo "$GIT_ROOT" >> ~/.termux/conf.d/git-sync.conf
}

git_sync_remove() {
    GIT_ROOT=$1
    GIT_ROOT_EXPANDED="${GIT_ROOT/#\~/$HOME}" # expand tilde in path

    sed -i "s|$GIT_ROOT||g" ~/.termux/conf.d/git-sync.conf
    sed -i "s|$GIT_ROOT_EXPANDED||g" ~/.termux/conf.d/git-sync.conf
}

git_sync_list() {
    cat ~/.termux/conf.d/git-sync.conf
}

git_sync_usage() {
    cat <<EOF
    Usage: git-sync <command> [arguments, ...]

    Commands:
        exec:           Executes git-sync for all configured directories
        list:           Lists all configured directories
        add <path>:     Adds <path> to git-sync
        remove <path>:  Removes <path> from git-sync
EOF
}

git_sync_main() {
    COMMAND=$1
    shift

    case $COMMAND in
        exec)
        git_sync_exec $@
        ;;

        add)
        git_sync_add $@
        ;;

        remove)
        git_sync_remove $@
        ;;

        list)
        git_sync_list $@
        ;;

        *)
        git_sync_usage $@
        ;;
    esac
}
git_sync_main $@
